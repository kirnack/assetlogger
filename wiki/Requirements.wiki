#summary Software Requirements Specification
#labels Phase-Requirements
<p>
=Purpose=
Program needed to schedule and checkout laptops to faculty and staff members.


==Overall System==
===Functional Requirements===
  * The system shall use barcodes to uniquely identify assets
  Rationale: Both faculty laptops and student rentals are labeled with barcodes. The Help Desk has several scanners.
===Future Requirements===
==Faculty Checkout==
===Functional Requirements===


  * The system shall be able to schedule an asset for use by faculty members
  * The system shall be able to check out an asset to a faculty member for a scheduled time
  * The system shall schedule an asset to a faculty member for no more than two weeks at a time
  * The system shall permit a faculty member to extend a checked out asset for up to two more weeks
  * The system shall be able to rent assets for use by students
  * The system shall permit students to rent assets for multiple semesters
  * The system may set the due date for student rentals to the last weekday before the last day of the last semester they are renting it for
  * The system shall permit faculty and students to return assets before the scheduled due date
  * The system may indicate the total cost for students to rent based on the scheduled time period
  * The system shall not schedule Laptops must not be scheduled if there is a schedule conflict
  * Needs to be able to assign the use of the laptop to a certain faculty/staff member.
  * Needs to be able to keep a current database of faculty and staff members
  * Faculty and staff members should be searchable by identification information such as their name or I- number.
  * Laptops should be easily searchable by their barcode or computer number.
  * A laptop needs to keep a record of its past borrowers, which should be easily searchable.
  * Faculty and staff members need a record of past laptops theyâ€™ve borrowed, easily searchable.
  * Laptops need to be able to be checked out to the faculty member for their scheduled time
  * The scheduled time needs to be changeable (as long as there are no conflicts.)
  * When there are conflicts it should be possible to schedule a new laptop for faculty/staff member in conflict (rather than just the current borrower.)
  * Email notification for when a laptop is late for both the Help Desk as well as the late borrower
  * Program access needs to be password protected.
  * Needs to be networked and synchronized with other program instances running on other machines (in particular the call center and front desk computers need to be in sync.)
  * enforce 2 weeks, available should be based on whether items been returned as well as scheduled
  * Student laptops also rented
===Future Requirements===

==Student Rental==
===Functional Requirements===

===Future Requirements===

===Absolute Requirements===
  * Graphic User interface
  * Working Database to handle people and assets
  * Schedule function
  * Checkout function
  * Checkin function
  * Laptops must not be scheduled if there is a schedule conflict
  * a record of laptops and their borrowers must be kept and easily searchable by either the laptop ID or the borrower ID.
  * Needs to be networked and synchronized with other program instances running on other machines (in particular the call center and front desk computers need to be in sync.)

===User Requests===
  * keep track of students who pick up for someone else
  * click on a calander
  * day to day according to close, not by hour
  * easy to get to available computers
  * farthest date away, smart schedule
  * mac or pc
  * override for a specific computer
  * that was easy button
  * print option for when it's due
  * email before its due
  * easy to use interface
  * nothing but teachers name/dummy proof
  * be able to edit teacher data
  * no having to change return dates
  * don't like having to have password, do we need it?
 
 