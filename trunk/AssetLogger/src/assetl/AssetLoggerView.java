/*
 * AssetLoggerView.java
 */

package assetl;

import java.util.Date;
import java.util.Calendar;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

import assetl.system.AssetLView;
import assetl.system.AssetLControl;
import assetl.system.Person;
import assetl.system.Asset;

import assetl.service.DatabaseControl;

/**
 * The application's main frame.
 */
public class AssetLoggerView 
        extends FrameView
        implements AssetLView
{
    private AssetLControl mControl;

    /**
     * Constructor for NetBeans generated gui. Takes the starting application
     * and controller as parameters.
     *
     * @param app The main application using the gui
     * @param pControl The controller for this view
     */
    public AssetLoggerView(SingleFrameApplication app, AssetLControl pControl)
    {
        super(app);

        initComponents();

        //set the controller
        mControl = pControl;

        //add event listeners
        scheduleBtn.addActionListener(new ScheduleListener());
        checkoutBtn.addActionListener(new CheckoutListener());

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    /**
     *
     */
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = AssetLoggerApp.getApplication().getMainFrame();
            aboutBox = new AssetLoggerAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        AssetLoggerApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     *
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        iNumberTextFld = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        firstNameTextFld = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        laptopNumTextFld = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startMonTxtFld = new javax.swing.JTextField();
        startDayTxtFld = new javax.swing.JTextField();
        startYearTxtFld = new javax.swing.JTextField();
        endMonTxtFld = new javax.swing.JTextField();
        endDayTxtFld = new javax.swing.JTextField();
        endYearTxtFld = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        scheduleBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dumpData = new javax.swing.JTextArea();
        checkoutBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(assetl.AssetLoggerApp.class).getContext().getResourceMap(AssetLoggerView.class);
        iNumberTextFld.setText(resourceMap.getString("iNumberTextFld.text")); // NOI18N
        iNumberTextFld.setName("iNumberTextFld"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        firstNameTextFld.setText(resourceMap.getString("firstNameTextFld.text")); // NOI18N
        firstNameTextFld.setName("firstNameTextFld"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        laptopNumTextFld.setText(resourceMap.getString("laptopNumTextFld.text")); // NOI18N
        laptopNumTextFld.setName("laptopNumTextFld"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        startMonTxtFld.setText(resourceMap.getString("startMonTxtFld.text")); // NOI18N
        startMonTxtFld.setName("startMonTxtFld"); // NOI18N

        startDayTxtFld.setText(resourceMap.getString("startDayTxtFld.text")); // NOI18N
        startDayTxtFld.setName("startDayTxtFld"); // NOI18N

        startYearTxtFld.setText(resourceMap.getString("startYearTxtFld.text")); // NOI18N
        startYearTxtFld.setName("startYearTxtFld"); // NOI18N

        endMonTxtFld.setText(resourceMap.getString("endMonTxtFld.text")); // NOI18N
        endMonTxtFld.setName("endMonTxtFld"); // NOI18N

        endDayTxtFld.setText(resourceMap.getString("endDayTxtFld.text")); // NOI18N
        endDayTxtFld.setName("endDayTxtFld"); // NOI18N

        endYearTxtFld.setText(resourceMap.getString("endYearTxtFld.text")); // NOI18N
        endYearTxtFld.setName("endYearTxtFld"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        scheduleBtn.setText(resourceMap.getString("scheduleBtn.text")); // NOI18N
        scheduleBtn.setName("scheduleBtn"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        dumpData.setColumns(20);
        dumpData.setRows(5);
        dumpData.setName("dumpData"); // NOI18N
        jScrollPane1.setViewportView(dumpData);

        checkoutBtn.setText(resourceMap.getString("checkoutBtn.text")); // NOI18N
        checkoutBtn.setName("checkoutBtn"); // NOI18N

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(39, 39, 39)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(jLabel5)
                    .add(checkoutBtn))
                .add(26, 26, 26)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mainPanelLayout.createSequentialGroup()
                        .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(endMonTxtFld)
                            .add(startMonTxtFld)
                            .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(mainPanelLayout.createSequentialGroup()
                                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, startDayTxtFld, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel7)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, endDayTxtFld))
                                .add(18, 18, 18)
                                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel8)
                                    .add(endYearTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(startYearTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(scheduleBtn)))
                    .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, firstNameTextFld)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, iNumberTextFld, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                    .add(laptopNumTextFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(80, 80, 80)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 270, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(29, 29, 29)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(iNumberTextFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(firstNameTextFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .add(30, 30, 30)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(laptopNumTextFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jLabel7)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(startMonTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(startDayTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(startYearTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(37, 37, 37)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(endMonTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(endYearTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(endDayTxtFld, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(31, 31, 31)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(scheduleBtn)
                    .add(checkoutBtn))
                .addContainerGap(66, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 293, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(46, 46, 46))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(assetl.AssetLoggerApp.class).getContext().getActionMap(AssetLoggerView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        org.jdesktop.layout.GroupLayout statusPanelLayout = new org.jdesktop.layout.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(statusPanelSeparator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
            .add(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(statusMessageLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 476, Short.MAX_VALUE)
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(statusPanelLayout.createSequentialGroup()
                .add(statusPanelSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(statusMessageLabel)
                    .add(statusAnimationLabel)
                    .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JTextArea dumpData;
    private javax.swing.JTextField endDayTxtFld;
    private javax.swing.JTextField endMonTxtFld;
    private javax.swing.JTextField endYearTxtFld;
    private javax.swing.JTextField firstNameTextFld;
    private javax.swing.JTextField iNumberTextFld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField laptopNumTextFld;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton scheduleBtn;
    private javax.swing.JTextField startDayTxtFld;
    private javax.swing.JTextField startMonTxtFld;
    private javax.swing.JTextField startYearTxtFld;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
    
    /**
     * The current person
     */
    Person mPerson;

    /**
     * The current laptop
     */
    Asset mLaptop;

    /**
     * The desired start date
     */
    Date mStart;

    /**
     * The desired end date
     */
    Date mEnd;

    public void showView()
    {
        getApplication().show(this);
    }

    public void hideView()
    {
        getApplication().hide(this);
    }


    //
    // TODO: Replace this test code with code that is actually useful
    //

    /**
     * Gets the data from the text fields and makes objects that can
     * be sent to the controller.
     */
    private void grabData()
    {
        //get the person data
        mPerson = new Person(iNumberTextFld.getText());
        mPerson.setFirstName(firstNameTextFld.getText());

        //get the laptop data
        mLaptop = new Asset(laptopNumTextFld.getText(), "PC");

        //make a local calander and set the start and end dates
        Calendar cal = Calendar.getInstance();
        cal.set(Integer.parseInt(startYearTxtFld.getText()),
                Integer.parseInt(startMonTxtFld.getText()) + 1,
                Integer.parseInt(startDayTxtFld.getText()));
        mStart = cal.getTime();
        cal.set(Integer.parseInt(endYearTxtFld.getText()),
                Integer.parseInt(endMonTxtFld.getText()) + 1,
                Integer.parseInt(endDayTxtFld.getText()));
        mEnd = cal.getTime();
    }

    /**
     * Listens for when the user pushed the schedule button. It generates
     * Person, Asset, and Date objects and sends them to the controller
     * to actually schedule a laptop.
     */
    class ScheduleListener
            implements ActionListener
    {
        /**
         * Invoked when the user pushes the schedule button
         * 
         * @param ev The event causing this action
         */
        public void actionPerformed(ActionEvent ev)
        {
            grabData();
            mControl.schedule(mPerson, mLaptop, mStart, mEnd);
            System.err.println("User pushed schedule button");
        }
    }

    /**
     * Listens for when the user pushed the checkout button. It generates
     * Person, Asset, and Date objects and sends them to the controller
     * to checkout the laptop.
     */
    class CheckoutListener
            implements ActionListener
    {
        /**
         * Invoked when the user pushes the checkout button
         *
         * @param ev The event causing this action
         */
        public void actionPerformed(ActionEvent ev)
        {
            grabData();
            mControl.checkout(mPerson, mLaptop, mEnd);
            System.err.println("User pushed checkout button");
        }
    }
 
    /**
     * Updates the view's display of the model. This function will be
     * called every time the model's state changes.
     */
    public void updateData()
    {
        DatabaseControl myControl = (DatabaseControl) mControl;
        dumpData.append("Model update.\n The teacher is:" +
                myControl.getPerson(iNumberTextFld.getText()).getFirstName() + "\n");
    }
}
