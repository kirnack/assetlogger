/*
 * CheckInView.java
 *
 * Created on Mar 14, 2010, 3:43:17 PM
 */

package assetl.service;

import assetl.system.AssetView;
import assetl.system.AssetLControl;

/**
 * Provides an interface to check in a laptop
 *
 * @author Devin Doman
 */
public class CheckInView 
        extends AssetView
{

    /**
     * Creates a user interface taking a controller
     * as a parameter.
     *
     * @param pControl The controller for this view
     */
    public CheckInView(AssetLControl pControl)
    {
        super(pControl, "Checkin");
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    /**
     * Updates the view's display of the model. This function will be
     * called every time the model's state changes.
     */
    public void updateData()
    {
    }

    /**
     * This view has no checkout ability, let controller change the view
     */
    public void enableCheckout()
    {
        switchCheckout();
    }

    /**
     * Give controller access to modify the current view to enable checkins
     */
    public void enableCheckin()
    {
        //Do nothing checkin ability is already enabled
    }

    /**
     * Lets the controller enable checkout function in view if applicable
     */
    public void enableSchedule()
    {
        switchSchedule();
    }

    /**
     * Lets the controller enable checkout function in view if applicable
     */
    public void enableCancel()
    {
        switchCancel();
    }
}
